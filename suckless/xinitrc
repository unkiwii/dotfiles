#!/usr/bin/env zsh

# set monitor output
hdmi_mode="$(xrandr -q | grep -A1 "HDMI-1 connected" | tail -1 | awk '{ print $1 }')"
vga_mode="$(xrandr -q | grep -A1 "VGA-0 connected" | tail -1 | awk '{ print $1 }')"
edp_mode="$(xrandr -q | grep -A1 "eDP-1 connected" | tail -1 | awk '{ print $1 }')"
if [ -n "$hdmi_mode" ]; then
  # extra hdmi monitor layout
  xrandr --output HDMI-1 --mode "$hdmi_mode" --pos 0x0 --rotate normal --output eDP-1 --primary --mode "$edp_mode" --pos 282x1080 --rotate normal
else
  if [ -n "$vga_mode" ]; then
    # virtual layout
    xrandr --output VGA0 --mode "$vga_mode" --pos 0x0 --rotate normal
  else
    # no extra monitor layout
    xrandr --output eDP-1 --mode "$edp_mode" --pos 0x0 --rotate normal
  fi
fi

# choose (randomnly) and set background
# bgs=()
# for f in $(ls /usr/share/images/wallpaper_purple_*); do
#   bgs+=( $f )
# done
# bgs_size=${#bgs[@]}
# bgs_index=$((($RANDOM % $bgs_size) + 1))
# feh --bg-scale ${bgs[$bgs_index]}

# set keyboard layout
#
# NOTE: all options can be found at /usr/share/X11/xkb/rules/base.lst
#
# -layout us                      set the keyboard layout to US
# -variant altgr-intl             set the variant to use AltGr for áéíóú ÁÉÍÓÚ ñÑ
# -option                         clear all options
# -option ctrl:nocaps             capslock behave like ctrl
# -option altwin:swap_alt_win     swaps alt and win keys
# -option lv3:ralt_switch         remaps Alt_R to AltGr
setxkbmap \
  -layout us \
  -variant altgr-intl \
  -option \
  -option ctrl:nocaps \
  -option altwin:swap_alt_win \
  -option lv3:ralt_switch

# run slstatus in background to set status bar
(slstatus) &

# run compton: a composition manager (fancy effects for windows)
# (compton) &

# systray icons
# (sleep 10s; nm-applet) &
# (sleep 12s; blueman-applet) &
# (sleep 14s; volumeicon) &

# start dropbox
if [ -f ~/bin/dropbox.py ]; then
  (sleep 60s; ~/bin/dropbox.py start) &
fi
if [ -f "`which dropbox`" ]; then
  (sleep 60s; dropbox start) &
fi

# day of week, if we are in a weekday then execute work script
# dow=$(date +"%u")
# if [[ $dow -ge 1 && $dow -le 5 ]]; then
#   work
# fi

# start dwm
exec dwm
