# set the prefix to C-f instead of C-b
unbind C-b
set -g prefix C-f
bind C-f send-prefix

set-option -sg escape-time 10

# set TERM to screen-256color so programs can detect 256 color support
set -g default-terminal "screen-256color"

# separate words better
set -g word-separators ' @"=()[]\/\\'
set -ag word-separators "'"

# use zsh as the shell of tmux
set-option -g default-command "zsh"

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# disable mouse
set -g mouse off

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "> > > > > > > > > >  RELOADED  < < < < < < < < < <"
bind s set-option -g status

# status bar
set -g status-position bottom
set -g status-left ' #{session_name} | '
set -g status-right ''
setw -g window-status-current-format ' #I:#W '
setw -g window-status-format ' #I:#W '

# split window on the current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# tmux skin
# source-file ~/.config/tmux/skins/purple-pink
source-file ~/.config/tmux/skins/grey-orange

############
# vim mode #
############

# Use vim keybindings in copy mode
set -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Setup selection and copy as Vim

# for linux (and tmux >=2.4)
is_linux="uname | grep -q Linux"
if-shell "$is_linux" "bind-key p run 'xclip -o -selection clipboard | tmux load-buffer -; tmux paste-buffer'"
if-shell "$is_linux" "bind-key -T copy-mode-vi v send-keys -X begin-selection"
if-shell "$is_linux" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -selection clipboard'"

# for macosx (and tmux >=2.4)
is_macosx="uname | grep -q Darwin"
if-shell "$is_macosx" "bind-key -T copy-mode-vi v send-keys -X begin-selection"
if-shell "$is_macosx" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell "$is_macosx" "bind-key ] run 'pbpaste | tmux load-buffer - ; tmux paste-buffer'"

###########
# Plugins #
###########

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# install more plugins here

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
