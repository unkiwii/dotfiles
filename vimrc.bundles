set nocompatible  " be improved, required
filetype off      " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" fix keys for mapping function keys or alt
if !has("nvim")
  Plugin 'drmikehenry/vim-fixkey'
endif

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" :Tabularize command
Plugin 'godlygeek/tabular'

" git diff in the left
Plugin 'airblade/vim-gitgutter'

" eros tooling
Plugin 'unkiwii/vim-eros'

" html5 syntax
Plugin 'othree/html5.vim'

" javascript (nicer) syntax highlight
Plugin 'pangloss/vim-javascript'
let g:javascript_plugin_jsdoc = 1

" jsx syntax highlight
Plugin 'mxw/vim-jsx'
let g:jsx_ext_required = 0    " activate it on javascript files too, not just .jsx files

" javascript beautifier and maps
Plugin 'maksimr/vim-jsbeautify'
nnoremap <leader>f :call JsBeautify()<cr>
if has('autocmd') && !exists('js_beautify_autocommands_loaded')
  let js_beautify_autocommands_loaded = 1
  autocmd FileType javascript nnoremap <buffer> <leader>f :call JsBeautify()<cr>
  autocmd FileType json nnoremap <buffer> <leader>f :call JsonBeautify()<cr>
  autocmd FileType jsx nnoremap <buffer> <leader>f :call JsxBeautify()<cr>
  autocmd FileType html nnoremap <buffer> <leader>f :call HtmlBeautify()<cr>
  autocmd FileType css nnoremap <buffer> <leader>f :call CSSBeautify()<cr>
  autocmd FileType javascript vnoremap <buffer> <leader>f :call RangeJsBeautify()<cr>
  autocmd FileType json vnoremap <buffer> <leader>f :call RangeJsonBeautify()<cr>
  autocmd FileType jsx vnoremap <buffer> <leader>f :call RangeJsxBeautify()<cr>
  autocmd FileType html vnoremap <buffer> <leader>f :call RangeHtmlBeautify()<cr>
  autocmd FileType css vnoremap <buffer> <leader>f :call RangeCSSBeautify()<cr>
endif

" if a .editorconfig file is found use that to define whitespaces (and more?)
Plugin 'editorconfig/editorconfig-vim'

" mustache syntax highlight
Plugin 'mustache/vim-mustache-handlebars'

" apiblueprint syntax highlight
Plugin 'kylef/apiblueprint.vim'

" alternate files quickly (.c --> .h, etc)
Plugin 'vim-scripts/a.vim'
nnoremap <leader>a :A<cr>

" golang syntax highlight and commands
Plugin 'fatih/vim-go'
nnoremap gr :GoRun<cr>
nnoremap gb :GoBuild<cr>

" CtrlP
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_custom_ignore = 'node_modules\|git\|*.class\|target'
if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g "" --ignore-dir node_modules --ignore-dir git --ignore "*.class" --ignore-dir target'
endif

" files manager
Plugin 'scrooloose/nerdtree'
nnoremap <leader>t :NERDTreeToggle<cr>
let g:NERDTreeMinimalUI = 1
let g:NERDTreeShowHidden = 1
if has("win32")
  let g:NERDTreeDirArrowExpandable = '+'
  let g:NERDTreeDirArrowCollapsible = '-'
else
  let g:NERDTreeDirArrowExpandable = ''
  let g:NERDTreeDirArrowCollapsible = ''
endif

" comment/uncomment code in (almost) any language
Plugin 'tpope/vim-commentary'

" control surroundings better, like:
"  cs"'   :: replace double quotes with simple quotes
"  cs'"   :: replace simple quotes with double quotes
"  ds"    :: remove double quotes
"  ysiw'  :: add single quotes to the current word
Plugin 'tpope/vim-surround'
" allows . operator to surroundings
Plugin 'tpope/vim-repeat'

" async linter (syntax check)
Plugin 'w0rp/ale'
nnoremap <leader>e :ALENextWrap<cr>zz
nnoremap <leader>p :ALEPreviousWrap<cr>zz
let g:ale_c_clang_options = '-std=c11 -Wall -I. -Isrc'
let g:ale_linters = {
      \   'java': [],
      \   'javascript': ['eslint'],
      \   'c': ['clang'],
      \   'cpp': ['clang']
      \ }

" emment for html generation
Plugin 'mattn/emmet-vim'
inoremap <C-y> <esc>:call emmet#expandAbbr(0,"")<cr>

" interaction with tmux
Plugin 'benmills/vimux'
nnoremap <leader>vl :VimuxRunLastCommand<cr>
nnoremap <leader>vp :VimuxPromptCommand<cr>

" multiple highlight matches
Plugin 'jcorbin/vim-searchmatch'
highlight default link Match1 ErrorMsg
highlight default link Match2 Todo
highlight default link Match3 DiffAdd

" nice icons for nerdtree
Plugin 'ryanoasis/vim-devicons'
let g:WebDevIconsUnicodeDecorateFolderNodes = 0
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1
if has("win32")
  let g:webdevicons_enable = 0
  let g:webdevicons_enable_nerdtree = 0
  let g:webdevicons_enable_ctrlp = 0
else
  let g:webdevicons_enable = 1
  let g:webdevicons_enable_nerdtree = 1
  let g:webdevicons_enable_ctrlp = 1
endif

Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 1

" keep curernt file synced with NERDTree
Plugin 'unkiwii/vim-nerdtree-sync'
let g:nerdtree_sync_cursorline = 1

call vundle#end()           " required
filetype plugin indent on   " required
