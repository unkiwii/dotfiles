set nocompatible  " be improved, required
filetype off      " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" :Tabularize command
Plugin 'godlygeek/tabular'

" git diff in the left
Plugin 'airblade/vim-gitgutter'

" javascript (nicer) syntax highlight
Plugin 'pangloss/vim-javascript'

" javascript beautifier and maps
Plugin 'maksimr/vim-jsbeautify'
nnoremap <leader>f :call JsBeautify()<cr>
if has('autocmd') && !exists('js_beautify_autocommands_loaded')
  let js_beautify_autocommands_loaded = 1
  autocmd FileType javascript nnoremap <buffer> <leader>f :call JsBeautify()<cr>
  autocmd FileType json nnoremap <buffer> <leader>f :call JsonBeautify()<cr>
  autocmd FileType jsx nnoremap <buffer> <leader>f :call JsxBeautify()<cr>
  autocmd FileType html nnoremap <buffer> <leader>f :call HtmlBeautify()<cr>
  autocmd FileType css nnoremap <buffer> <leader>f :call CssBeautify()<cr>
  autocmd FileType javascript vnoremap <buffer> <leader>f :call RangeJsBeautify()<cr>
  autocmd FileType json vnoremap <buffer> <leader>f :call RangeJsonBeautify()<cr>
  autocmd FileType jsx vnoremap <buffer> <leader>f :call RangeJsxBeautify()<cr>
  autocmd FileType html vnoremap <buffer> <leader>f :call RangeHtmlBeautify()<cr>
  autocmd FileType css vnoremap <buffer> <leader>f :call RangeCssBeautify()<cr>
endif

" if a .editorconfig file is found use that to define whitespaces (and more?)
Plugin 'editorconfig/editorconfig-vim'

" mustache syntax highlight
Plugin 'mustache/vim-mustache-handlebars'

" apiblueprint syntax highlight
Plugin 'kylef/apiblueprint.vim'

" alternate files quickly (.c --> .h, etc)
Plugin 'vim-scripts/a.vim'
nnoremap <leader>s :A<cr>

" golang syntax highlight and commands
Plugin 'fatih/vim-go'
nnoremap gr :GoRun<cr>
nnoremap gb :GoBuild<cr>

" CtrlP
Plugin 'kien/ctrlp.vim'
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" files manager
Plugin 'scrooloose/nerdtree'
nnoremap <leader>t :NERDTreeToggle<cr>

" comment/uncomment code in (almost) any language
Plugin 'tpope/vim-commentary'
nnoremap <leader>. :Commentary<cr>
xnoremap <leader>. :Commentary<cr>

call vundle#end()           " required
filetype plugin indent on   " required
